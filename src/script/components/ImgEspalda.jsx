import React, { useState, useEffect } from "react";
import espalda from "../../img/musculos/espalda_650px.png";
import pointInPolygon from "point-in-polygon";

function ImgEspalda() {
  const [mouseLocation2, setMouseLocation2] = useState([0, 0]);
  const [desplazamientoX, setDesplazamientoX] = useState(0);
  const [desplazamientoY, setDesplazamientoY] = useState(0);
  const [showPolygonsB, setShowPolygonsB] = useState(Array(15).fill(false));

  const pointInPolygon = require("point-in-polygon");
  const polygonsB = [
    [
      [61, 110],
      [103, 82],
      [115, 65],
      [120, 60],
      [124, 60],
      [124, 90],
      [117, 105],
      [100, 115],
      [70, 117],
    ],
    [
      [35, 171],
      [28, 152],
      [40, 120],
      [45, 115],
      [60, 120],
      [72, 135],
      [72, 145],
      [65, 155],
      [60, 155],
    ],
    [
      [64, 157],
      [69, 185],
      [57, 223],
      [40, 230],
      [35, 230],
      [25, 208],
      [28, 180],
      [35, 172],
    ],

    [
      [70, 122],
      [70, 118],
      [100, 115],
      [110, 112],
      [117, 117],
      [123, 132],
      [123, 210],
      [120, 210],
      [97, 178],
      [92, 160],
      [95, 150],
      [98, 133],
      [95, 128],
    ],
    [
      [75, 135],
      [90, 128],
      [95, 130],
      [96, 140],
      [90, 160],
      [85, 173],
      [70, 170],
      [67, 155],
      [73, 145],
    ],
    [
      [70, 175],
      [93, 175],
      [120, 215],
      [110, 270],
      [106, 270],
      [98, 244],
      [80, 210],
    ],
    [
      [80, 215],
      [80, 251],
      [100, 270],
      [100, 260],
    ],
    [
      [80, 253],
      [100, 272],
      [75, 280],
      [70, 270],
    ],
    [
      [85, 278],
      [100, 277],
      [115, 295],
      [103, 295],
      [65, 318],
      [65, 300],
      [70, 288],
    ],
    [
      [113.5, 297],
      [123, 310],
      [123, 340],
      [115, 350],
      [80, 362],
      [75, 350],
      [85, 330],
      [80, 310],
      [100, 300],
    ],
    [
      [75, 360],
      [80, 365],
      [92, 360],
      [92, 390],
      [85, 420],
      [75, 450],
      [65, 470],
      [61, 420],
      [62, 390],
    ],
    [
      [95, 360],
      [107, 357],
      [105, 375],
      [105, 390],
      [107, 398],
      [102, 410],
      [105, 470],
      [97, 480],
      [85, 443],
      [85, 430],
      [90, 410],
      [92, 400],
    ],
    [
      [110, 355],
     [123, 345],
      [123, 360],
      [115, 425],
      [110, 415],
      [106, 380],
    ],
    [
      [105, 380],
      [110, 416],
      [114, 427],
      [118, 440],
      [115, 470],
      [106, 470],
      [106, 440],
      [104, 420],
    ],
    [
      [73, 458],
      [82, 478],
      [83, 485],
      [78, 510],
      [78, 550],
      [62, 540],
      [55, 500],
      
    ],
    [
      [85, 485],
      [80, 510],
      [80, 550],
      [93, 550],
      [110, 500],
      [92, 470],
    ],
// espejo
    [
      [250-61, 110],
      [250-103, 82],
      [250-115, 65],
      [250-120, 60],
      [250-124, 60],
      [250-124, 90],
      [250-117, 105],
      [250-100, 115],
      [250-70, 117],    ],
    [ [250-35, 171],
      [250-28, 152],
      [250-40, 120],
      [250-45, 115],
      [250-60, 120],
      [250-72, 135],
      [250-72, 145],
      [250-65, 155],
      [250-60, 155],    ],
    [ [250-64, 157],
      [250-69, 185],
      [250-57, 223],
      [250-40, 230],
      [250-35, 230],
      [250-25, 208],
      [250-28, 180],
      [250-35, 172],],
[     [250-70, 122],
      [250-70, 118],
      [250-100, 115],
      [250-110, 112],
      [250-117, 117],
      [250-123, 132],
      [250-123, 210],
      [250-120, 210],
      [250-97, 178],
      [250-92, 160],
      [250-95, 150],
      [250-98, 133],
      [250-95, 128],    ],
    [ [250-75, 135],
      [250-90, 128],
      [250-95, 130],
      [250-96, 140],
      [250-90, 160],
      [250-85, 173],
      [250-70, 170],
      [250-67, 155],
      [250-73, 145],    ],
    [ [250-70, 175],
      [250-93, 175],
      [250-120, 215],
      [250-110, 270],
      [250-106, 270],
      [250-98, 244],
      [250-80, 210],    ],
    [ [250-80, 215],
      [250-80, 251],
      [250-100, 270],
      [250-100, 260],    ],
    [ [250-80, 253],
      [250-100, 272],
      [250-75, 280],
      [250-70, 270],    ],
    [ [250-85, 278],
      [250-100, 277],
      [250-115, 295],
      [250-103, 295],
      [250-65, 318],
      [250-65, 300],
      [250-70, 288],    ],
    [ [250-113.5, 297],
      [250-123, 310],
      [250-123, 340],
      [250-115, 350],
      [250-80, 362],
      [250-75, 350],
      [250-85, 330],
      [250-80, 310],
      [250-100, 300],    ],
    [ [250-75, 360],
      [250-80, 365],
      [250-92, 360],
      [250-92, 390],
      [250-85, 420],
      [250-75, 450],
      [250-65, 470],
      [250-61, 420],
      [250-62, 390],    ],
    [ [250-95, 360],
      [250-107, 357],
      [250-105, 375],
      [250-105, 390],
      [250-107, 398],
      [250-102, 410],
      [250-105, 470],
      [250-97, 480],
      [250-85, 443],
      [250-85, 430],
      [250-90, 410],
      [250-92, 400],    ],
    [ [250-110, 355],
      [250-123, 345],
      [250-123, 360],
      [250-115, 425],
      [250-110, 415],
      [250-106, 380],    ],
    [ [250-105, 380],
      [250-110, 416],
      [250-114, 427],
      [250-118, 440],
      [250-115, 470],
      [250-106, 470],
      [250-106, 440],
      [250-104, 420],    ],
    [ [250-73, 458],
      [250-82, 478],
      [250-83, 485],
      [250-78, 510],
      [250-78, 550],
      [250-62, 540],
      [250-55, 500], ],
    [ [250-85, 485],
      [250-80, 510],
      [250-80, 550],
      [250-93, 550],
      [250-110, 500],
      [250-92, 470],
    ],
  ];

  // ----- Definición de la ubicación de la imagen -----
  useEffect(() => {
    const imageB = document.getElementById("imagen0b");
    if (imageB) {
      const rect = imageB.getBoundingClientRect();
      setDesplazamientoX(rect.left);
      setDesplazamientoY(rect.top);
    }
  }, [mouseLocation2]);

  // ----- definición de la ubicación del mouse dentro de la imagen -----

  const handleOnClick = (e) => {
    setMouseLocation2([
      e.clientX - desplazamientoX,
      e.clientY - desplazamientoY,
    ]);
  };

  // ----- comparador mouse vs area poligonal -----
  useEffect(() => {
    const newShowPolygons = polygonsB.map((polygon) =>
      pointInPolygon(mouseLocation2, polygon)
    );
    setShowPolygonsB(newShowPolygons);
  }, [mouseLocation2]);

  return (
    <>
      <div className="image-container" onClick={handleOnClick}>
        <img src={espalda} id="imagen0b" alt="Imagen de fondo b" />
        {showPolygonsB.map((show, index) => (
          <img
            key={`rear${index + 1}`}
            src={`show/r0${index + 1}.png`}
            alt={`Espalda ${index + 1}`}
            style={{
              position: "absolute",
              top: 0, // Ajusta la posición top según sea necesario
              left: 0, // Ajusta la posición left según sea necesario
              display: show ? "block" : "none",
              zIndex: "3",
            }}
          />
        ))}
        
        {/* {polygonsB.map((polygon, index) => ( //Visualización de las areas 
          <div
            key={`polygon${index + 1}`}
            style={{
              position: "absolute",
              top: 0,
              left: 0,
              width: "100%",
              height: "100%",
              clipPath: `polygon(${
                polygon.map((point) => point.join("px ")).join("px, ") + "px"
              })`,
              background: "rgba(255, 0, 0, 0.8)", // Color de fondo para la visualización
            }}
          ></div>
        ))} */}
      </div>
    </>
  );
}

export default ImgEspalda;
